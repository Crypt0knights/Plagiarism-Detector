 
  
 
 
 
LuaRocks 
New command line argument handling and 
auto-completion for luarocks 
March 2019 
─ 
Proposal for GSoC 2019 
Applicant:- ​Aman Verma 
Mentor:- ​Daurnimator 
 
 
 
 
 
----------------Page (0) Break----------------
  1 
 
Basics 
Email:      ​amanv1999@gmail.com 
Github:    ​https://github.com/nightwarrior-xxx/ 
Gitlab:     ​https://gitlab.com/nightwarrior-xxx 
Blog:        ​https://nightwarrior-xxx.github.io/ 
Portfolio: ​https://nightwarrior-xxx.github.io/portfolio/ 
Twitter:    ​https://twitter.com/nightwarrior_xx 
Academic background: 
-Currently enrolled in Information Technology Engineering at - Jaypee Institute of 
Information Technology, Noida, India. (4th semester) 
Other time commitments during GSOC: 
-Semester exams - 16 to 22 May 2019 
-No planned vacations 
-5th semester - 16th July onwards 
Experience 
Programming languages I am fluent in: 
-Bash  
-Python 
-C/C++ 
-Javascript 
Tools generally used for development: 
-Debian ( Universal Operating System ) 
-Git and github ( version control ) 
-Qt and pyQt ( GUI ) 
-Visual Studio Code ( text-editor ) 
-Bash ( shell ) and Xfce Terminal ( default terminal )  
-ZeroBrane Studio ( IDE for lua ) 
-Firefox ( with DuckDuckGO extension as an default web-browser ) 
-Slack,Telegram,Discord,Gitter and IRC ( for communicating with other developers ) 
-Medium,Quora and Reddit ( for reading Articles on new Technologies  ) 
-Twitter ( for staying aware & updated about things happening in the world ) 
  
 
  
----------------Page (1) Break----------------
  2 
 
I am familiar with Lua and currently working on a project ​‘Making life easy’ -​with help of lua 
programming language to ease my as well as other developers life by making their time 
consuming jobs like backups and saving passwords automated. 
Yes, I have been using luarocks since the past few weeks mainly to install ‘rocks’, I am using 
it’s command-line interface. But, never made my own rocks. Also, I have plans to learn how 
to make rocks as it will expand my knowledge of how internal processes of rocks works. 
I have worked on very diverse set of projects in the last two years with my team, ranging 
from web apps to desktop applications. Most of my projects are based on problem solving. 
Some of my friends uses my project to ease their day-to-day complexities. Few of my 
projects are not present on github due to incomplete documentation and finishing touch. 
Soon, I will upload them too. 
Highlights of some of projects I have worked on 
-Slytheron-The_Snake_Game ​:- The primitive Snake Game developed in C by using 
Open-GL and Linked Lists. It includes all the features from increasing difficulty of the 
game as the gamer progress in the game to showing his progress on the taskbar as 
well as on the leaderboard.  
 ( ​Source Code​ ) 
-Mathematical GUI Calculator ​:- A minimal GUI based calculator made with help of 
python programming language using pyQT(GUI).  
( ​Source Code​ )  
-Passbook - the Password Manager​ :- It’s a password manager made in bash. A 
user can save password of his specific domains and can also ask for the password 
he saves. Some finishing touch is still left with the project which will be done soon. 
( ​Source Code​ ) 
-TutOverflow ​:- Projects not only helps you to find latest programming languages in 
trend but also helps you to find which tech is in trend rated by other people who 
have used it . It has some cool features also where people can write blog about 
about their daily activities and what special they explored , what things they are 
working on etc. All these analysis and prediction is done with a help of survey that 
programmers can take .Coming to the architecture of the project , it is build using 
some cool front end stuff (CSS,Bootstrap,Javascript,Jquery) and PHP in backend. 
API’s like ckeditor are also used. ( ​Source Code ​) 
  
 
  
----------------Page (2) Break----------------
  3 
 
-MetroWorksDS ​:- An application meant for Linux users. Aim of the project is to help 
people of Delhi who are using Delhi Metro to reach their destination within shortest 
period of time. 
The project not only helps them to reach their destination by picking a shortest path 
for them but will also tell them not much they are going to get charge for their small 
journey. The project uses some cool Bash Hacks namely zenity , sL , notify , graphViz 
library which is graph visualization library and Dijkstra’s Algorithms with 
modification to predict the shortest path. 
( ​Source Code​ ) 
 
 
-Corporate Social Responsibility (CSR) Portal ​:- To identify,connect and list projects 
and programmes of the State Government, Individual and Private Firms and to 
monitor,evaluate the progress in sourcing and channelizing the CSR Funds to the 
projects/programmes we have made a CSR-Portal during SMART INDIA 
HACKATHON, 2019 GRAND FINALE. 
Basically we tried reduce the gap between needy people and Private/GOVT firms. 
We were also runners-up of our problem statement. 
Private firms those who want to donate CSR funds or any other way they can 
contribute can come to our website and contribute to the events organized by firms 
and people there. Tech Stack ( HTML, CSS , JavaScript, jquery,  HBS, Node ) 
Besides just creating an event our website has various other features also :- 
1. Email Automation 
2. Payment Portal 
3. Security Checks 
4. Forum 
5. Social Media Sharing Automation System 
6. Authentication System ( PAN, CIN ) 
( ​Website Link​ )  ( ​Source Code​ ) 
 
 
 
 
 
  
----------------Page (3) Break----------------
  4 
 
Open Source Contributions in Free Software Development Projects 
 
I have been involved in a few Free Software Development Projects too. Also I believe 
in one commit at a time. Highlights of some projects I have contributed to :- 
 
-SecureDrop ​:- Defending and supporting cutting-edge transparency 
journalism in the face of adversity.  SecureDrop is a free software platform 
for secure communication between Journalist and whistleblowers. 
SecureDrop uses the anonymity network​ ​Tor to facilitate communication 
between​ ​whistleblowers, journalists, and news organizations. 
 
My Contributions​ :-  
 
●Added changes to UI of the admin_add_login page​ :-  
Add changes to UI of the admin add login page so that the new user 
while signing-in could take care that credentials must be entered 
correctly. This was done with help writing some code in HTML and 
Sass. Basically you have to add HTML and Sass and during rendering 
the page that Sass will automatically generate CSS for that page. 
( ​Merged Request Link​ ) 
 
●Added some changes to reduce the bubble size :- 
The size of message bubble was too big for SecureDrop-client. Task 
was to reduce message bubble size so that it takes the shape of 
message send or received. This was done with help of Qt size policy 
library. 
( ​Merge Request Link​ ) 
 
●Added base OS info to metadata endpoint :-  
Adding metadata informations of the operating system to json file  
and then writing test using pytest and mocks for verifications. 
( ​Merge Request Link​ )  
 
 
 
 
 
 
----------------Page (4) Break----------------
  5 
 
-Debian  ​:-  I have been contributing in Debian by Packaging Debian packages. 
Debian packages are maintained by a community of Debian Developers and 
volunteers. A Debian package is a collection of files that allow for applications 
or libraries to be distributed via the Debian package management system. 
The aim of packaging is to allow the automation of installing, upgrading, 
configuring, and removing computer programs for Debian in a consistent 
manner.  
 
My Contributions :-  
●Packaging ​golang-github-fzambia-sentinel :- ​Redis Sentinel support for 
redigo library. The package is still in process to push to upstream and 
can be found ​here​. 
 
●Packaging ​golang-github-h2non-go-is-svg :- ​Tiny package to verify if a 
given file buffer is an SVG image in Go (golang). The package is too 
small to be uploaded to upstream so it’s kept on main until it’s 
required to push to upstream. It can be found ​here​. 
 
●Packaging ​golang-github-hashicorp-go-safetemp ​:- Functions for safely 
working with temporary directories and files. This package is also in 
process to be push to upstream and can be found ​here​. 
 
 
Since, I am trying some cool stuff with lua, I also have some plans for packaging some 
Debian Lua packages.  
 
Also, I am part of ​Open Source Developers Club (​ OSDC ) of my College and volunteer of  
other Open Source communities like  ​India Linux User Group - Delhi​ ( ILUG-D ) , ​pyDelhi​ and  
Durgapur Linux User Group​ ( dgplug ) .  
I like introducing newbies to Open Source. Also,  I love to talk about Open Source and hack 
on Open Source projects.  
 
 
 
 
 
 
 
----------------Page (5) Break----------------
  6 
 
Project 
 
Yes, I have selected a project from the idea list. The project I am interested in is ​New 
command line argument handling and auto-completion for luarocks.  
I choose this project because I believe having an autocomplete feature is must . 
Autocomplete speeds up human-computer interactions when it correctly predicts the word 
a user intends to enter after only a few characters have been typed into a text input field. It 
works best in domains with a limited number of possible words (such as in​ ​command line 
interpreters), when some words are much more common (such as when addressing an 
email), or writing structured and predictable text (as in​ ​source code editors). 
 
My vision for the project :-  ​An autocomplete feature which will auto-generate help text, 
validate arguments and display help if wrong. Also, introspectable for generating 
completion data. This can be achieved by parsing the arguments written by user with the 
help of an argparser and bash/zsh environment variable ( which is an argument parser ) 
and predicting the set of commands after the user presses tab for completing the 
command. Also, suggesting correct commands if by mistake it enters wrong commands. 
Milestones/timeline 
 
I.Community Bonding Period 
 
I will brush up my Lua knowledge and dive deeper into LuaRocks codebase for 
understanding it. Also, I have an aim to become a full-time contributor to LuaRocks. 
Moreover, I will solving existing bugs and issues. Apart from discussing the 
implementation with the mentor, I will be building my knowledge with argparser 
and bash/zsh environment variables while researching about other approaches too. 
I will also study some core concepts for bash and zsh to more flexibly with them 
while hacking on the project. 
 
The project will go in the following style:- 
● Add completion subcommand to luarocks that simply uses new argparse feature for 
suggesting commands. 
●Modify luarocks to use argparse. 
●Docs and improvements. 
 
 
 
 
----------------Page (6) Break----------------
  7 
 
  
 
II.May 27 - June 10 ( 2 weeks ) 
  
●Week 1 ​:-  ​Implementation of a function which will detect the $SHELL 
used by the user. Initialisation of a bash script which will do the task of 
autocomplete. Writing code for auto-completion feature. 
 
 
●Week 2 ​:-​ ​Finishing the tasks of autocompletion for bash as well as 
zsh script , so that the job for auto-completion would be accomplish 
for bash and zsh shell.  
 
 
Result​:-  ​Implementation and completion of auto-complete 
feature in bash and zsh. 
 
 
 
III.June 10 - June 24 ( 2 weeks ) 
 
●Week 1 ​:-  ​Implementation of autocomplete feature for fish shell. 
Testing autocomplete feature and it’s deployment. 
 
 
●Week 2 ​:-​  ​Gamifying the argparser to add the feature to suggestions. 
Modifying argparser in order to implement the suggestions feature​. 
Discussion with the mentor before Phase-1 evaluations. 
 
 
 
Result​:-  ​Completion of autocomplete feature for fish shell 
and Initialisation of suggestion feature.  
 
 
  
 
----------------Page (7) Break----------------
  8 
 
 
 
IV.June 24 - July 8 ( 2 weeks ) 
 
●Week 1​ :-  ​Continuing the task of adding the suggestion feature to 
the argparser. Improvising time complexity  ( if possible ) . 
 
 
●Week 2 ​:-  ​Finishing the addition of suggestions feature. Also adding 
a feature of help in addition of suggestion feature just in case user 
added an unidentified command. 
 
Result​:-  ​Completion and deployment of suggestion as well 
as help feature. 
 
V.July 8 - July 22 ( 2 weeks ) 
 
●Week 1 ​:- ​Modifying the luarocks to use argparse. This can be done 
with the help of by aliasing the command for running the argparse i.e  
lua argparse.lua ​with ​luarocks​ . So, that whenever the luarocks 
command will be called, a script will execute. Making some additional 
changes to script as well . Also, this is how other auto-completion and 
suggestion tools like ​kubectl ​runs. I have done some research 
regarding how they actually executes all this and then I came to this 
conclusion. Addition of all the commands and its flag into argparse .  
 
●Week 2 ​:-  ​Completion the pending task of making additional changes 
to the script in order to make the argparser compatible with luarocks. 
Discussion with mentor before Phase-2 evaluation.  
  
Result​:-  ​Improvisation and making argparser compatible 
with the luarocks. 
 
 
 
 
----------------Page (8) Break----------------
  9 
 
 
  
 
VI.July 22 - August 5 ( 2 weeks ) 
 
●Week 1​ :- ​ ​Compatibility of bash script with the luarocks script such 
that the auto-completion feature as well as suggestions works 
together.  
  
 
●Week 2​ :-​ ​Improvisation of the bugs and the errors occurred while 
deploying this task. By the end of this week the project will be almost 
complete, so I will go for docs in next week. 
 
Result​:-  ​Compatibility and Deployment of autocomplete and 
suggestion features together. 
   
 
VI.August 5 - August 19 ( 2 weeks ) 
 
●Week 1 :-  ​Documentation for how the scripts are made after 
detection of the bash/zsh shell. 
 
 
●Week 2 :-​  ​Documents for how argparse library  is being used in the 
project in the .rst format.  
 
Result​:-  ​Documentation of the project. 
 
 
 
 
 
 
 
 
----------------Page (9) Break----------------
  10 
 
Template 
Basically the autocomplete work on a principle command i.e shown below . This is just a 
demo 
 
Now, magical thing happening here is we added what options which this command 
supports and after pressing tab bash/zsh/fish will automatically suggest them. 
We will be adding these kind of commands in the script which will be sourced in ​.bashrc 
and that script will externally source the script which will add suggestion feature. After 
studying and doing some research on tools like kubectl and others which have same 
common feature this approach is kinda good and will definitely work.
 
 
 
Prototype of how the suggestion feature is going to work.  
 
----------------Page (10) Break----------------
  11 
 
Gsoc 
No, I have not participated in GSOC before . This is the first time I am participating in GSOC. 
Also I want to become a full time contributor to LuaRocks . 
No, I haven’t applied to any other organisation for GSOC. 
 
----------------Page (11) Break----------------
